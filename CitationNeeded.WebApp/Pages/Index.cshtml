@page
@model CitationNeeded.WebApp.Pages.IndexModel
@{
    ViewData["Title"] = "CitationNeeded";
}

@if (Model.Account == null)
{
    <p>You are not logged in!</p>
}
else
{
    <aside id="sidebar" class="d-md-block d-none">
        @foreach (var book in Model.CitationBooks)
        {
            <div class="book-outline" data-citationbook-id="@book.Id">
                <div class="book w-100">
                    <p class="title">@book.Name</p>
                    <p class="date">@Model.GetLatestDate(book).ToString("d")</p>
                </div>
            </div>
        }

        <div id="js_newbookplus" class="book-outline__new">
            <div class="book__new w-100">
                <i class="fas fa-plus"></i>
            </div>
        </div>

        <div id="js_newbookinput" class="d-none">
            <form method="post">
                <div class="form-group">
                    <label asp-for="CreateBookName">Name: </label>
                    <input id="js_createBookInput" class="form-control" asp-for="CreateBookName" />
                    <span asp-validation-for="CreateBookName" class="text-danger"></span>
                </div>
                <button id="js_createBookButton" type="submit" class="btn btn-primary startupBtn" asp-page-handler="CreateBook">Submits</button>
            </form>
        </div>
    </aside>

    <div id="js_content">

    </div>
}

@section Scripts 
{
    <script>
        function qs(key) {
            key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
            var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));
            return match && decodeURIComponent(match[1].replace(/\+/g, " "));
        }

        function loadCitationBook(cbId) {
            $('#js_content').load('?handler=CitationBookPartial&citationBookId=' + cbId);
        }

        $(function () {
            var citationBookId = qs("citationBookId");

            if (citationBookId == null || citationBookId.length == 0) {
                return;
            }

            loadCitationBook(citationBookId);
            window.history.replaceState({}, null, "");
        })
    </script>

    <script>
        $(function () {
            $("#js_newbookplus").click(function () {
                $(this).addClass("d-none");
                $("#js_newbookinput").removeClass("d-none");
            });
        });
    </script>

    <script>
        $(function () {
            $("#js_createBookButton").click(function (e) {
                if ($("#js_createBookInput").val().length < 1) {
                    e.preventDefault();
                }
            });
        });
    </script>

    <script>
        $(function () {
            $(".book-outline").click(function () {
                var citationBookId = $(this).data("citationbook-id");
                loadCitationBook(citationBookId);
            });
        });
    </script>
}